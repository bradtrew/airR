// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// accuracy
double accuracy(const arma::vec& actual, const arma::vec& predicted, const double threshold);
RcppExport SEXP airR_accuracy(SEXP actualSEXP, SEXP predictedSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    Rcpp::traits::input_parameter< const double >::type threshold(thresholdSEXP);
    __result = Rcpp::wrap(accuracy(actual, predicted, threshold));
    return __result;
END_RCPP
}
// squared_error
arma::vec squared_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_squared_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(squared_error(actual, predicted));
    return __result;
END_RCPP
}
// mean_sq_error
double mean_sq_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_mean_sq_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(mean_sq_error(actual, predicted));
    return __result;
END_RCPP
}
// rmse
double rmse(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_rmse(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(rmse(actual, predicted));
    return __result;
END_RCPP
}
// absolute_error
arma::vec absolute_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_absolute_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(absolute_error(actual, predicted));
    return __result;
END_RCPP
}
// mean_abs_error
double mean_abs_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_mean_abs_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(mean_abs_error(actual, predicted));
    return __result;
END_RCPP
}
// median_abs_error
double median_abs_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_median_abs_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(median_abs_error(actual, predicted));
    return __result;
END_RCPP
}
// r2_score
double r2_score(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_r2_score(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    __result = Rcpp::wrap(r2_score(actual, predicted));
    return __result;
END_RCPP
}
