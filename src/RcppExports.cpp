// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// accuracy
double accuracy(const arma::vec& actual, const arma::vec& predicted, const double threshold);
RcppExport SEXP airR_accuracy(SEXP actualSEXP, SEXP predictedSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    Rcpp::traits::input_parameter< const double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(accuracy(actual, predicted, threshold));
    return rcpp_result_gen;
END_RCPP
}
// fbeta_score
double fbeta_score(const arma::vec& actual, const arma::vec& predicted, const double beta);
RcppExport SEXP airR_fbeta_score(SEXP actualSEXP, SEXP predictedSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(fbeta_score(actual, predicted, beta));
    return rcpp_result_gen;
END_RCPP
}
// f1_score
double f1_score(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_f1_score(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(f1_score(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// precision
double precision(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_precision(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(precision(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// recall
double recall(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_recall(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(recall(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// tru_neg_rate
double tru_neg_rate(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_tru_neg_rate(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(tru_neg_rate(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// brier_score
double brier_score(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_brier_score(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(brier_score(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// conf_mat
Rcpp::NumericMatrix conf_mat(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_conf_mat(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(conf_mat(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// hamming_dist
double hamming_dist(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_hamming_dist(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(hamming_dist(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// thresh
arma::vec thresh(const arma::vec& predicted, const double threshhold);
RcppExport SEXP airR_thresh(SEXP predictedSEXP, SEXP threshholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    Rcpp::traits::input_parameter< const double >::type threshhold(threshholdSEXP);
    rcpp_result_gen = Rcpp::wrap(thresh(predicted, threshhold));
    return rcpp_result_gen;
END_RCPP
}
// squared_error
arma::vec squared_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_squared_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(squared_error(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// mean_sq_error
double mean_sq_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_mean_sq_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_sq_error(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// rmse
double rmse(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_rmse(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(rmse(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// absolute_error
arma::vec absolute_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_absolute_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(absolute_error(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// mean_abs_error
double mean_abs_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_mean_abs_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_abs_error(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// median_abs_error
double median_abs_error(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_median_abs_error(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(median_abs_error(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
// r2_score
double r2_score(const arma::vec& actual, const arma::vec& predicted);
RcppExport SEXP airR_r2_score(SEXP actualSEXP, SEXP predictedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type actual(actualSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type predicted(predictedSEXP);
    rcpp_result_gen = Rcpp::wrap(r2_score(actual, predicted));
    return rcpp_result_gen;
END_RCPP
}
